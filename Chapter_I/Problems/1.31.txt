;;iterative version
(define (product term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (* result (term a)))))
  (iter a 1))
 

;;;;recursive version
;;(define (product term a next b)
;;  (if (> a b)
;;      1
;;      (* (term a)
;;         (product term (next a) next b))))
 
;;-------------------------------------

(define (factorial n)
  (define (return x) (+ x 0))
  (define (inc x) (+ x 1))
  (product return 1 inc n))

  (factorial 6)
;;-------------------------------------

;;pi/4 = (2*4*4*6*6*8...)/(3*3*5*5*7*7...)
;;Let's understand what it is.
;;At the top we have product of pairs of even numbers (2*4, 4*6, 6*8...)
;;At the bottom we have product of squares of not even numbers (3*3, 5*5, 7*7,...)

(define (pi4 n)                  ;;n should be >=1, if n=1 pi/4 = (2*4)/(3*3)
  (define (square x) (* x x))
  (define (inc-by-two x) (+ x 2))
  (define (pair-product x) (* x (+ x 2)))
  (/ (product pair-product 2 inc-by-two (+ 0 (* 2 n)))
     (product square 3 inc-by-two (+ 1 (* 2 n)))))

;;And pi:
(* (pi4 100) 4)
