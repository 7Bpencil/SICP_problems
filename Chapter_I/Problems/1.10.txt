;;Ackermann function
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1) (A x (- y 1)) ))))

;;so x is decremented with each step 

-------------------------------

#(A 1 10) = 1024

(A 1 10)
-> (A 0 (A 1 9))
-> (A 0 (A 0 (A 1 8)))
-> (A 0 (A 0 ( A 0 (1 7))))
-> ...
-> (A 0 (A 0 ... (A 0 (A 1 1)...) ->  
-> (A 0 (A 0 ... (A 0 2)...) ->       ;;there are ten (A 0 x) constructions

(A 0 x) is 2x, so (A 1 10) = (2(2(2(2(...(2*2)...) = 1024

;;So (A 1 N) = 2^N

--------------------------------

#(A 2 4) = 2^16

(A 2 4) -> (A 1 (A 2 3)) = 2^(A 2 3)
(A 2 3) -> (A 1 (A 2 2)) = 2^(A 2 2)
(A 2 2) -> (A 1 (A 2 1)) = 2^(A 2 1)
(A 2 1) -> 2

;;So (A 2 4) = 2^2^2^2 = 2^16

--------------------------------

#(A 3 3) = (A 2 4) = 2^16

(A 3 3)
-> (A 2 (A 3 2))
-> (A 2 (A 2 (A 3 1)))
-> (A 2 (A 2 2))
-> (A 2 (A 1 (A 2 1)))
-> (A 2 (A 1 2))       ;;(A 1 2) = 2^2
-> (A 2 4)

--------------------------------

(define (f n) (A 0 n)) -> 2n
(define (g n) (A 1 n)) -> 2^n
(define (h n) (A 2 n)) -> 2^2^2^2^...^2    ;;there are n numbers 'two'

-------------------------------- 
