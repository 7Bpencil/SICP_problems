;;new if
(define (new-if predicate then-clause else-clause)
  (cond (predicate then-clause)
        (else else-clause)))

;;code:
(define (sqrt-iter guess x)
  (new-if (good-enough? guess x)
          guess
          (sqrt-iter (improve guess x)
                     x)))


;;First think: new-if is a procedure not a special form
;;So it is calced like a combination
;;So interpreter will calc predicate, then-clause and else-clause

;;predicate will return #f (false)
;;then-clause will return guess (square)
;;else-clause will breake everything into infinite loop 
;;becuse it will call new-if procedure again and again and again... 
